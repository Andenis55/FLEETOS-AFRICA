// scripts/generateDigest.ts
import { writeFile, copyFile } from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
import { format, startOfISOWeek, endOfISOWeek, parseISO } from 'date-fns';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Temporary mock values
const cStats = { block: 3, caution: 2, none: 7 };
const delta = { block: -1, caution: 0, none: +2 };
const topRegion = 'West';
const regionChanges = 5;
const improvements = ['John Doe', 'Jane Doe'];
const current = '2025-W26';

// Enhancement: Add date range in header
const start = format(startOfISOWeek(parseISO(`${current}-1`)), 'MMM d');
const end = format(endOfISOWeek(parseISO(`${current}-1`)), 'MMM d');

const lines: string[] = [];

lines.push(`# 📰 Weekly Digest – ${current} (${start} – ${end})`);
lines.push('');
lines.push(`**🚫 Blocked Drivers:** ${cStats.block} (${delta.block >= 0 ? '+' : ''}${delta.block})`);
lines.push(`**⚠️ Caution Flags:** ${cStats.caution} (${delta.caution >= 0 ? '+' : ''}${delta.caution})`);
lines.push(`**✅ Cleared Flags:** ${cStats.none} (${delta.none >= 0 ? '+' : ''}${delta.none})`);
lines.push('');
lines.push(`📍 **Most Active Region:** ${topRegion} (${regionChanges} changes)`);
lines.push('');

// 📸 Embed chart reference in Markdown
lines.push('<p align="center">');
lines.push('  <img src="../../public/weekly-digest-chart.png" alt="Weekly Chart" width="500" />');
lines.push('</p>');
lines.push('');

if (improvements.length > 0) {
  lines.push(`🎉 **Drivers Who Improved:**`);
  improvements.forEach((n) => lines.push(`- ${n}`));
} else {
  lines.push(`💤 No driver flag recoveries this week.`);
}

lines.push('');

// Add ISO timestamp footer
const timestamp = format(new Date(), 'yyyy-MM-dd HH:mm:ss');
lines.push(`_Generated by FLEETOS Digest Engine on ${timestamp}_`);

// 🗂️ Archive by week
const archivePath = path.join(__dirname, `../src/reports/weekly-digest-${current}.md`);
await writeFile(archivePath, lines.join('\n'), 'utf8');
console.log(`📝 Digest written to ${archivePath}`);

// Auto-copy to weekly-digest.md (latest digest pointer)
const latestPath = path.join(__dirname, `../src/reports/weekly-digest.md`);
await copyFile(archivePath, latestPath);
console.log(`📌 Digest also copied to ${latestPath}`);
