import path from 'path';
import { fileURLToPath } from 'url';
import { writeFile } from 'fs/promises';
import { Chart, registerables, ChartItem } from 'chart.js';
import { createCanvas } from 'canvas';
import { getDigestData } from '@digestEngine/fetchWeeklyStats';
import { digestConfig } from '@digestEngine/config'; // <-- Added import

// Register Chart.js components
Chart.register(...registerables);

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Optional polish: fallback to 'en' if defaultLanguage is missing
const lang = process.env.LANG || digestConfig.defaultLanguage;
const locale = digestConfig.locales[lang] ?? digestConfig.locales['en'];
const { improvedTitle, noImprovements, footer } = locale;

const generateChart = async () => {
  const canvas = createCanvas(800, 400);
  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;

  new Chart(ctx as unknown as ChartItem, {
    type: 'bar',
    data: {
      labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],
      datasets: [
        {
          label: 'Deliveries',
          data: [12, 19, 7, 15, 10],
          backgroundColor: 'rgba(75, 192, 192, 0.6)',
        },
      ],
    },
    options: {
      responsive: false,
      plugins: { title: { display: true, text: 'Weekly Fleet Deliveries' } },
    },
  });

  const imagePath = path.join(__dirname, '../../public/weekly-digest-chart.png');
  await writeFile(imagePath, canvas.toBuffer('image/png'));
  console.log(`📊 Chart image saved to ${imagePath}`);
};

const generateDigest = async () => {
  // Await getDigestData() to ensure data is resolved before use
  const { week, range, stats, topRegion, improvedDrivers, chartImage } = await getDigestData();

  const lines: string[] = [];

  lines.push(`# 📰 Weekly Digest – ${week} (${range.from} – ${range.to})`);
  lines.push('');
  lines.push(`**🚫 Blocked Drivers:** ${stats.block.count} (${stats.block.delta >= 0 ? '+' : ''}${stats.block.delta})`);
  lines.push(`**⚠️ Caution Flags:** ${stats.caution.count} (${stats.caution.delta >= 0 ? '+' : ''}${stats.caution.delta})`);
  lines.push(`**✅ Cleared Flags:** ${stats.none.count} (${stats.none.delta >= 0 ? '+' : ''}${stats.none.delta})`);
  lines.push('');
  lines.push(`📍 **Most Active Region:** ${topRegion.name} (${topRegion.changes} changes)`);
  lines.push('');
  lines.push(`<p align="center"><img src="${chartImage}" alt="Weekly Chart" width="500" /></p>`);
  lines.push('');
  lines.push(improvedDrivers.length > 0 ? improvedTitle : noImprovements);
  lines.push(footer);

  if (improvedDrivers.length > 0) {
    lines.push(`🎉 **Drivers Who Improved:**`);
    improvedDrivers.forEach((name) => lines.push(`- ${name}`));
  } else {
    lines.push(`💤 No driver flag recoveries this week.`);
  }

  lines.push('');
  lines.push(`_Generated by FLEETOS Digest Engine_`);

  const digestPath = path.join(__dirname, '../../src/reports/weekly-digest.md');
  await writeFile(digestPath, lines.join('\n'), 'utf8');
  console.log(`✅ Digest written to ${digestPath}`);
};

await generateChart();
await generateDigest();